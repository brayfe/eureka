<?php

/**
 * @file
 * Contains eureka_project_ct.module..
 */

use Drupal\Core\Render\Element;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Field\FieldStorageDefinitionInterface;
use Drupal\user\Entity\User;

/**
 * Implements hook_form_alter().
 */
function eureka_project_ct_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  if (in_array($form_id, ['node_project_edit_form', 'node_project_form'])) {

    // Suppress display of path setting for user accounts.
    $form['path']['#access'] = FALSE;

    $form['faculty_info'] = [
      '#type' => 'details',
      '#title' => 'Faculty',
      '#group' => 'advanced',
      '#open' => TRUE,
    ];
    $form['faculty_info']['field_project_lead'] = $form['field_project_lead'];
    unset($form['field_project_lead']);
    $form['faculty_info']['field_faculty_collaborators'] = $form['field_faculty_collaborators'];
    unset($form['field_faculty_collaborators']);

    $form['contact_info'] = [
      '#type' => 'details',
      '#title' => 'Contact Information *',
      '#group' => 'advanced',
      '#open' => TRUE,
    ];
    $fields = [
      'field_contact_name',
      'field_contact_email',
    ];

    foreach ($fields as $machine_name) {
      $form['contact_info'][$machine_name] = $form[$machine_name];
      unset($form[$machine_name]);
    }

    $form['#attached']['library'][] = 'eureka_project_ct/project_form';

    // Add Custom Submit Handler for adding Project to Project Lead.
    if ($action != 'preview' && isset($form['actions'][$action]['#type']) && $form['actions'][$action]['#type'] === 'submit') {
      $form['actions'][$action]['#submit'][] = 'eureka_project_ct_node_form_submit';
    }

  }
}

/**
 * Implements hook_field_widget_form_alter().
 */
function eureka_project_ct_field_widget_form_alter(&$element, FormStateInterface $form_state, $context) {
  $changes = [
    'field_faculty_collaborators' => 'Add another faculty',
    'field_project_tags' => 'Add another tag',
    'field_tags' => 'Add another tag',
    'field_external_projects' => 'Add another project URL',
  ];

  $field = $context['items']->getFieldDefinition();

  $field_storage = $field->getFieldStorageDefinition();
  if ($field_storage->getCardinality() == FieldStorageDefinitionInterface::CARDINALITY_UNLIMITED) {
    $name = $field->getName();
    if (in_array($name, array_keys($changes))) {
      $element['#custom_add_another_value'] = $changes[$name];
    }
  }
}

/**
 * Implements hook_preprocess_field_multiple_value_form().
 *
 * We look for a value that was placed there earlier by
 * custom_add_another_field_widget_form_alter() and change the add_more button
 * to use that.
 */
function eureka_project_ct_preprocess_field_multiple_value_form(&$variables) {
  foreach (Element::children($variables['element']) as $child) {
    $child_element = &$variables['element'][$child];
    if (isset($child_element['#custom_add_another_value']) || isset($child_element['#custom_remove'])) {
      if (isset($child_element['#custom_add_another_value']) && isset($variables['element']['add_more']['#value']) && $variables['element']['add_more']['#value'] != $child_element['#custom_add_another_value']) {
        $variables['element']['add_more']['#value'] = $child_element['#custom_add_another_value'];
      }
      if (isset($child_element['#custom_add_another_value']) && isset($variables['button']['#value']) && $variables['button']['#value'] != $child_element['#custom_add_another_value']) {
        $variables['button']['#value'] = $child_element['#custom_add_another_value'];
      }
      if (isset($child_element['#custom_remove']) && isset($child_element['remove_button']['#value'])) {
        $child_element['remove_button']['#value'] = $child_element['#custom_remove'];
      }
    }
  }
}

/**
 * Custom Submit Handler for Project nodes.
 *
 * Append Project to Project Lead's known projects. Remove from previous
 * Project Lead's profile if updating Project Lead.
 */
function eureka_project_ct_node_form_submit($form, FormStateInterface $form_state) {
  // Grab Project and User information from saved form.
  $project_id = $form_state->getValue('nid');
  $new_lead_id = $form_state->getValue('field_project_lead')[0]['target_id'];

  // Check if any other users are listed as Project Lead.
  $query = \Drupal::entityQuery('user')
    ->condition('roles', 'faculty')
    ->condition('field_projects', $project_id);
  $uids = $query->execute();

  // New Project if no query results.
  if ($uids) {
    // Grab exisiting lead's uid; should only ever be one.
    $existing_lead_id = reset($uids);
    // Check if Project Lead has changed.
    if ($existing_lead_id != $new_lead_id) {
      // Remove project from old Project Lead.
      $user = User::load($existing_lead_id);
      $projects = array_column($user->get('field_projects')->getValue(), 'target_id');
      unset($user->field_projects[array_search($project_id, $projects)]);
      // Do I need to reindex the array?
      // $user->field_projects = array_values($user->field_projects);
      $user->save();

      // Add Project to new Project Lead.
      add_user_to_project($new_lead_id, $project_id);
    }
  }
  else {
    // Add Project to Project lead's profile.
    add_user_to_project($new_lead_id, $project_id);
  }
}

/**
 * Add Project to User Profile.
 *
 * Given a Project ID and User ID, add Project to User's Project list.
 */
function add_user_to_project($uid, $proj_id) {
  $user = User::load($uid);
  $user->field_projects[] = $proj_id;
  $user->save();
}
